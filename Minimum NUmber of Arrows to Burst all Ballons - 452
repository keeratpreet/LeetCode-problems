class Solution {
public:
    static bool cmp(vector<int>& a , vector<int>& b){
        if(a[0]==b[0]){
            return a[1]<b[1] ;
        }
        return a[0] < b[0] ;
    }
    int findMinArrowShots(vector<vector<int>>& points) {
        if (points.size() == 0 || points.size()==1) return points.size() ;
        sort(points.begin() , points.end() , cmp);

        int ans = 1 ;
        int xi = points[0][0] , xf = points[0][1];
        int i = 1;
        while(i<points.size()){
            if(points[i][0]<=xf && points[i][0]>=xi ){
             
              xi = max(xi,points[i][0]) , xf = min(xf,points[i][1]);
            
            }
            else {
                ans++ ;
                xi = points[i][0] , xf = points[i][1];
            }
            i++ ;
        }
        return ans ;
    }
};
