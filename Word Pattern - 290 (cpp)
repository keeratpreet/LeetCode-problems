class Solution {
public:
    bool wordPattern(string pattern, string s) {
        int n1 = pattern.length();
        int n2 = s.length();

        vector<string> words ;
        string word="";
        for(int i=0 ; i<n2 ;i++){
            if(s[i]==' '){
                words.push_back(word);
                word="";
            }else{
                word+=s[i] ;
            }
        }
        words.push_back(word);

        int n3 = words.size();
        if(n1 != n3 )return false ;
        
        unordered_map<char,int>m1 ;
        unordered_map<string,int>m2 ;
        unordered_map<char,string> m3 ;
        for(int i =0 ; i<n3 ;i++){
            m1[pattern[i]]++ ;
            m2[words[i]]++;

            if(m1.size() != m2.size()) return false ;
           if(m3[pattern[i]] =="") m3[pattern[i]]=words[i];
            else if(m3[pattern[i]] != words[i])return false ;
            

        }
        return true ;
    }
};
